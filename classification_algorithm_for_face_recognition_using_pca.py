# -*- coding: utf-8 -*-
"""Classification Algorithm for Face Recognition Using PCA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SxOkTzidh6IagEGXnTcYCjFYZK_8iGUh
"""

!wget http://vis-www.cs.umass.edu/lfw/lfw-funneled.tgz
!tar -xvzf lfw-funneled.tgz

main_folder = 'lfw_funneled'
sub_folders = [f for f in os.listdir(main_folder) if os.path.isdir(os.path.join(main_folder, f))]
files_dict = {folder:[os.path.join(main_folder, folder, f) for f in os.listdir(os.path.join(main_folder, folder))] for folder in sub_folders}
print(files_dict)

def processImage(path):
  return np.array(Image.open(path).convert('L').resize((40, 40))).reshape((-1, 1))

X = []
for person in files_dict:
  for path in files_dict[person]:
    X.append(processImage(path))

X = np.array(X)


X = X[:, :, 0]
print(X.shape)


pca = PCA(16)
X_new = pca.fit_transform(X)


efaces = pca.components_
print(efaces.shape)

def showEfaces(efaces, r=4, c=4):
  plt.figure(figsize=(12,12))
  for i in range(r):
    for j in range(c):
      plt.subplot(r, c, i * c + j + 1)
      plt.imshow(efaces[i * c + j].reshape((40, 40)), cmap='gray')
      plt.axis('off')
  plt.show()

showEfaces(efaces)